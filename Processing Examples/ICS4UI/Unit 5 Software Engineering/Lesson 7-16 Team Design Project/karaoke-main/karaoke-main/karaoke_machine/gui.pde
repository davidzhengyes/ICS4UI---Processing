/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void pauseButton(GButton source, GEvent event) { //_CODE_:pause:277523:
  if (paused == true) {
    paused = false;
    song.start();
    pause.setText("Pause");
  } else {
    paused = true;
    song.pause();
    pause.setText("Resume");
  }
} //_CODE_:pause:277523:

public void volumeSlider(GCustomSlider source, GEvent event) { //_CODE_:volume:675395:
  vol = volume.getValueF();
  song.setVolume();
} //_CODE_:volume:675395:

public void quitGame(GButton source, GEvent event) { //_CODE_:quit:425047:
  displayGameOver();
} //_CODE_:quit:425047:

public void startButtonClicked(GButton source, GEvent event) { //_CODE_:start:312785:
 if (!choice.equals("Song Selection")) {
    displayKaraoke();
  }
} //_CODE_:start:312785:

public void songSelectionClicked(GDropList source, GEvent event) { //_CODE_:songSelection:299611:
  choice = source.getSelectedText();
  println(choice);

  if (choice.equals("Mary Had A little Lamb")) {
    song = littleLamb;
  } else if (choice.equals("You Belong With Me (Taylor Swift)")) {
    song = belongWithMe;
  } else if (choice.equals("Forever Like That (Ben Rector)")) {
    song = foreverLikeThat;
  }
} //_CODE_:songSelection:299611:

public void exitButtonClicked(GButton source, GEvent event) { //_CODE_:exit:764140:
  exit();
} //_CODE_:exit:764140:

public void backToMenuClicked(GButton source, GEvent event) { //_CODE_:backToMenu:875870:
  displayMainMenu();
} //_CODE_:backToMenu:875870:


// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  pause = new GButton(this, 93, 323, 81, 20);
  pause.setText("Pause");
  pause.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  pause.addEventHandler(this, "pauseButton");
  volume = new GCustomSlider(this, 206, 310, 100, 50, "purple18px");
  volume.setShowValue(true);
  volume.setLimits(1.0, 0.0, 1.0);
  volume.setNumberFormat(G4P.DECIMAL, 2);
  volume.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  volume.setOpaque(false);
  volume.addEventHandler(this, "volumeSlider");
  quit = new GButton(this, 326, 322, 80, 20);
  quit.setText("Quit");
  quit.addEventHandler(this, "quitGame");
  start = new GButton(this, 215, 204, 80, 29);
  start.setText("Start");
  start.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  start.addEventHandler(this, "startButtonClicked");
  songSelection = new GDropList(this, 138, 261, 223, 100, 4, 10);
  songSelection.setItems(loadStrings("list_299611"), 0);
  songSelection.addEventHandler(this, "songSelectionClicked");
  exit = new GButton(this, 212, 389, 80, 21);
  exit.setText("Exit");
  exit.setLocalColorScheme(GCScheme.RED_SCHEME);
  exit.addEventHandler(this, "exitButtonClicked");
  backToMenu = new GButton(this, 206, 341, 95, 30);
  backToMenu.setText("Back To Menu");
  backToMenu.setLocalColorScheme(GCScheme.RED_SCHEME);
  backToMenu.addEventHandler(this, "backToMenuClicked");
  volumeLabel = new GLabel(this, 179, 301, 98, 34);
  volumeLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  volumeLabel.setText("Volume");
  volumeLabel.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  volumeLabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit 
GButton pause; 
GCustomSlider volume; 
GButton quit; 
GButton start; 
GDropList songSelection; 
GButton exit; 
GButton backToMenu; 
GLabel volumeLabel; 
