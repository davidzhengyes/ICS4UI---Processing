/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:609475:
  appc.background(230);
} //_CODE_:window1:609475:

public void zoomInButtonClicked(GButton source, GEvent event) { //_CODE_:zoomInButton:284849:
  zoomIn( zoomFactor );
} //_CODE_:zoomInButton:284849:

public void zoomOutButtonClicked(GButton source, GEvent event) { //_CODE_:zoomOutButton:716078:
  zoomOut( zoomFactor );
} //_CODE_:zoomOutButton:716078:

public void restartButtonClicked(GButton source, GEvent event) { //_CODE_:restartButton:358106:
  resetStartingValues();
  redraw();
} //_CODE_:restartButton:358106:

public void animateZoomButtonClicked(GButton source, GEvent event) { //_CODE_:animateZoomButton:592215:
  animateZoom = !animateZoom; //Used at the end of the draw() procedure
  
  if( animateZoom ) {
    loop(); //Make draw() loop automatically.
    animateZoomButton.setText( "Stop Zoom" );
  }
  
  else {
    noLoop();
    animateZoomButton.setText( "Animate Zoom In" );
  }
  
} //_CODE_:animateZoomButton:592215:

public void zoomSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:zoomSlider:257108:
  animatedZoomFactor = zoomSlider.getValueF();
} //_CODE_:zoomSlider:257108:

public void zoomSizeSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:zoomSizeSlider:768417:
  zoomFactor = zoomSizeSlider.getValueF();
} //_CODE_:zoomSizeSlider:768417:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 350, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  zoomInButton = new GButton(window1, 20, 20, 80, 30);
  zoomInButton.setText("Zoom In");
  zoomInButton.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  zoomInButton.addEventHandler(this, "zoomInButtonClicked");
  zoomOutButton = new GButton(window1, 150, 20, 70, 30);
  zoomOutButton.setText("Zoom Out");
  zoomOutButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  zoomOutButton.addEventHandler(this, "zoomOutButtonClicked");
  restartButton = new GButton(window1, 270, 20, 60, 30);
  restartButton.setText("Restart");
  restartButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  restartButton.addEventHandler(this, "restartButtonClicked");
  label1 = new GLabel(window1, 20, 50, 87, 20);
  label1.setText("Or press i");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 150, 50, 80, 20);
  label2.setText("Or press o");
  label2.setOpaque(false);
  label4 = new GLabel(window1, 270, 50, 80, 20);
  label4.setText("Or press r");
  label4.setOpaque(false);
  animateZoomButton = new GButton(window1, 20, 140, 80, 30);
  animateZoomButton.setText("Animate Zoom In");
  animateZoomButton.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  animateZoomButton.addEventHandler(this, "animateZoomButtonClicked");
  zoomSlider = new GCustomSlider(window1, 100, 170, 100, 40, "grey_blue");
  zoomSlider.setLimits(1.1, 1.05, 1.3);
  zoomSlider.setNumberFormat(G4P.DECIMAL, 0);
  zoomSlider.setOpaque(false);
  zoomSlider.addEventHandler(this, "zoomSliderChanged");
  label3 = new GLabel(window1, 20, 180, 80, 20);
  label3.setText("Zoom speed");
  label3.setOpaque(false);
  zoomSizeSlider = new GCustomSlider(window1, 100, 70, 100, 40, "grey_blue");
  zoomSizeSlider.setLimits(1.6, 1.05, 2.0);
  zoomSizeSlider.setNumberFormat(G4P.DECIMAL, 2);
  zoomSizeSlider.setOpaque(false);
  zoomSizeSlider.addEventHandler(this, "zoomSizeSliderChanged");
  label5 = new GLabel(window1, 20, 80, 80, 20);
  label5.setText("Zoom factor");
  label5.setOpaque(false);
  label6 = new GLabel(window1, 20, 230, 182, 40);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Click anywhere on screen to recenter around that point");
  label6.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton zoomInButton; 
GButton zoomOutButton; 
GButton restartButton; 
GLabel label1; 
GLabel label2; 
GLabel label4; 
GButton animateZoomButton; 
GCustomSlider zoomSlider; 
GLabel label3; 
GCustomSlider zoomSizeSlider; 
GLabel label5; 
GLabel label6; 
