/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:874559:
  appc.background(230);
} //_CODE_:window1:874559:

public void clearBeamsClicked(GButton source, GEvent event) { //_CODE_:clearBeams:516821:
  println("clearBeams - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:clearBeams:516821:

public void lightSpeedChanged(GSlider source, GEvent event) { //_CODE_:lightSpeed:294252:
  println("lightSpeed - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:lightSpeed:294252:

public void demo1Clicked(GButton source, GEvent event) { //_CODE_:demo1:977807:
  println("demo1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:demo1:977807:

public void pauseClicked(GButton source, GEvent event) { //_CODE_:pause:785878:
  println("pause - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:pause:785878:

public void mexReflChanged(GSlider source, GEvent event) { //_CODE_:maxReflSlider:516808:
  println("maxReflSlider - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:maxReflSlider:516808:

public void previewLenChanged(GSlider source, GEvent event) { //_CODE_:previewLen:562530:
  println("previewLen - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:previewLen:562530:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  clearBeams = new GButton(window1, 120, 20, 80, 30);
  clearBeams.setText("Clear Beams");
  clearBeams.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  clearBeams.addEventHandler(this, "clearBeamsClicked");
  lightSpeed = new GSlider(window1, 120, 120, 260, 40, 10.0);
  lightSpeed.setShowValue(true);
  lightSpeed.setShowLimits(true);
  lightSpeed.setLimits(20, 0, 100);
  lightSpeed.setNumberFormat(G4P.INTEGER, 0);
  lightSpeed.setOpaque(false);
  lightSpeed.addEventHandler(this, "lightSpeedChanged");
  label1 = new GLabel(window1, 20, 120, 80, 40);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Light Speed (px/frame)");
  label1.setOpaque(false);
  demo1 = new GButton(window1, 20, 240, 80, 30);
  demo1.setText("Demo 1");
  demo1.setLocalColorScheme(GCScheme.RED_SCHEME);
  demo1.addEventHandler(this, "demo1Clicked");
  pause = new GButton(window1, 20, 20, 80, 30);
  pause.setText("Pause");
  pause.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pause.addEventHandler(this, "pauseClicked");
  maxReflSlider = new GSlider(window1, 120, 70, 260, 40, 10.0);
  maxReflSlider.setShowValue(true);
  maxReflSlider.setShowLimits(true);
  maxReflSlider.setLimits(40, 1, 100);
  maxReflSlider.setNumberFormat(G4P.INTEGER, 0);
  maxReflSlider.setOpaque(false);
  maxReflSlider.addEventHandler(this, "mexReflChanged");
  label2 = new GLabel(window1, 20, 70, 80, 40);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Max Reflections");
  label2.setOpaque(false);
  previewLen = new GSlider(window1, 120, 170, 260, 40, 10.0);
  previewLen.setLimits(0.5, 0.0, 1.0);
  previewLen.setNumberFormat(G4P.DECIMAL, 2);
  previewLen.setOpaque(false);
  previewLen.addEventHandler(this, "previewLenChanged");
  label3 = new GLabel(window1, 20, 170, 80, 40);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Preview Length");
  label3.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton clearBeams; 
GSlider lightSpeed; 
GLabel label1; 
GButton demo1; 
GButton pause; 
GSlider maxReflSlider; 
GLabel label2; 
GSlider previewLen; 
GLabel label3; 
