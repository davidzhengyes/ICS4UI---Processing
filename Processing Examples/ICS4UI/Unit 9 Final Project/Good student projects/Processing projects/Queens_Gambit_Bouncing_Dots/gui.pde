/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:386975:
  appc.background(230);
} //_CODE_:window1:386975:

public void change_speed1(GSlider source, GEvent event) { //_CODE_:cSpeed1:856332:
  speedOne = (cSpeed1.getValueI())/8.0*30;                                          //the speed bar for squares
  reset();
} //_CODE_:cSpeed1:856332:

public void change_colour(GButton source, GEvent event) { //_CODE_:cColour:873397:
  outLine = !outLine;                                                               //the colour button
  if (outLine == false)
    cColour.setText("Show Outline");
  else
    cColour.setText("Show Object");
} //_CODE_:cColour:873397:

public void change_background(GButton source, GEvent event) { //_CODE_:cBackground:860990:
  if (colourChange1 == 255) {                                                      //for changing colour
    cBackground.setText("Dark Mode");
    colourChange1 = 25;
    colourChange2 = 255;
  }
  else {
    cBackground.setText("Light Mode");
    colourChange1 = 255;
    colourChange2 = 25;
  }
} //_CODE_:cBackground:860990:

public void number_of_item(GSlider source, GEvent event) { //_CODE_:nItem:354377:
  n = nItem.getValueI();                                                            //the n value
  reset();
} //_CODE_:nItem:354377:

public void change_to_square(GButton source, GEvent event) { //_CODE_:cSquare:868190:
  sceneMode = 1;                                                                    //button to go to square mode
  cSpeed2.setVisible(false);
  cDelay.setVisible(false);
  label5.setVisible(false);
  cSpeed1.setVisible(true);
  reset();
} //_CODE_:cSquare:868190:

public void change_to_circle(GButton source, GEvent event) { //_CODE_:cCircle:661219:
  sceneMode = 2;                                                                    //button for circle mode
  cSpeed1.setVisible(false);
  cSpeed2.setVisible(true);
  cDelay.setVisible(true);
  label5.setVisible(true);
  reset();
} //_CODE_:cCircle:661219:

public void change_speed2(GSlider source, GEvent event) { //_CODE_:cSpeed2:825142:
  speedTwo = cSpeed2.getValueI();                                                //speed for circles
} //_CODE_:cSpeed2:825142:

public void change_delay(GSlider source, GEvent event) { //_CODE_:cDelay:521993:
  circleDelay = cDelay.getValueI();                                              //delay values
} //_CODE_:cDelay:521993:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 240, 250, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  cSpeed1 = new GSlider(window1, 30, 90, 170, 40, 10.0);
  cSpeed1.setLimits(17, 35, 1);
  cSpeed1.setNumberFormat(G4P.INTEGER, 0);
  cSpeed1.setOpaque(false);
  cSpeed1.addEventHandler(this, "change_speed1");
  label1 = new GLabel(window1, 60, 0, 110, 30);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Functions Toolbar");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 60, 80, 110, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Movement Speed");
  label2.setOpaque(false);
  cColour = new GButton(window1, 20, 160, 90, 30);
  cColour.setText("Show Outline");
  cColour.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  cColour.addEventHandler(this, "change_colour");
  cBackground = new GButton(window1, 130, 160, 90, 30);
  cBackground.setText("Light Mode");
  cBackground.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  cBackground.addEventHandler(this, "change_background");
  nItem = new GSlider(window1, 30, 50, 170, 40, 10.0);
  nItem.setShowValue(true);
  nItem.setLimits(10, 2, 20);
  nItem.setNumberFormat(G4P.INTEGER, 0);
  nItem.setOpaque(false);
  nItem.addEventHandler(this, "number_of_item");
  label3 = new GLabel(window1, 50, 30, 130, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Number of Items");
  label3.setOpaque(false);
  cSquare = new GButton(window1, 20, 210, 90, 30);
  cSquare.setText("Square Shuffling");
  cSquare.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  cSquare.addEventHandler(this, "change_to_square");
  label4 = new GLabel(window1, 60, 190, 110, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Different Scenes");
  label4.setOpaque(false);
  cCircle = new GButton(window1, 130, 210, 90, 30);
  cCircle.setText("Wave Like Circle");
  cCircle.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  cCircle.addEventHandler(this, "change_to_circle");
  cSpeed2 = new GSlider(window1, 30, 90, 170, 40, 10.0);
  cSpeed2.setLimits(5, 1, 30);
  cSpeed2.setNumberFormat(G4P.INTEGER, 0);
  cSpeed2.setOpaque(false);
  cSpeed2.addEventHandler(this, "change_speed2");
  cDelay = new GSlider(window1, 30, 130, 170, 40, 10.0);
  cDelay.setLimits(10, 1, 30);
  cDelay.setNumberFormat(G4P.INTEGER, 0);
  cDelay.setOpaque(false);
  cDelay.addEventHandler(this, "change_delay");
  label5 = new GLabel(window1, 70, 120, 90, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Circle Delay");
  label5.setOpaque(false);
  cSpeed2.setVisible(false);
  cDelay.setVisible(false);
  label5.setVisible(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider cSpeed1; 
GLabel label1; 
GLabel label2; 
GButton cColour; 
GButton cBackground; 
GSlider nItem; 
GLabel label3; 
GButton cSquare; 
GLabel label4; 
GButton cCircle; 
GSlider cSpeed2; 
GSlider cDelay; 
GLabel label5; 
