/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:Recipe_Panel:739360:
  appc.background(230);
} //_CODE_:Recipe_Panel:739360:

public void recipes_click(GDropList source, GEvent event) { //_CODE_:Recipes:738366:
  // the appropriate recipe gets selected when it gets clicked
  if (Recipes.getSelectedIndex() == 0) {
    selected = cupcakes;  
  
  }
  
  else if (Recipes.getSelectedIndex() == 1) {
    selected = cookies;
  }
  
  else if (Recipes.getSelectedIndex() == 2) {
    selected = brownies;
  }
  
  // the serving slider and serving values get adjusted to the recipe's original serving value by default
  servings.setValue(selected.origserving);
  planserving = selected.origserving;
  
  // redraws the recipe
  redraw();
} //_CODE_:Recipes:738366:

public void sorting_click(GDropList source, GEvent event) { //_CODE_:sorting1:565058:
  // changes the sorting of the ingredients to the option selected
  if (sorting1.getSelectedIndex() == 0) {
    sorting = "incr";
  }
  
  else if (sorting1.getSelectedIndex() == 1) {
    sorting = "decr";
  }
  
  // redraws the recipe
  redraw();
} //_CODE_:sorting1:565058:

public void servings_change(GSlider source, GEvent event) { //_CODE_:servings:376765:
  // changes the serving size based on the slider
  planserving = servings.getValueI();
  
  // redraws the recipe
  redraw();
} //_CODE_:servings:376765:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Recipe");
  Recipe_Panel = GWindow.getWindow(this, "Recipe_Panel", 0, 0, 300, 250, JAVA2D);
  Recipe_Panel.noLoop();
  Recipe_Panel.setActionOnClose(G4P.EXIT_APP);
  Recipe_Panel.addDrawHandler(this, "win_draw1");
  title = new GLabel(Recipe_Panel, -2, 19, 128, 34);
  title.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  title.setText("Sort Ingredients");
  title.setLocalColorScheme(GCScheme.RED_SCHEME);
  title.setOpaque(false);
  Recipes = new GDropList(Recipe_Panel, 181, 58, 98, 108, 3, 10);
  Recipes.setItems(loadStrings("list_738366"), 0);
  Recipes.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  Recipes.addEventHandler(this, "recipes_click");
  sorting1 = new GDropList(Recipe_Panel, 17, 58, 100, 87, 2, 10);
  sorting1.setItems(loadStrings("list_565058"), 0);
  sorting1.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  sorting1.addEventHandler(this, "sorting_click");
  servings = new GSlider(Recipe_Panel, 75, 191, 150, 50, 10.0);
  servings.setShowValue(true);
  servings.setShowLimits(true);
  servings.setLimits(12, 1, 100);
  servings.setShowTicks(true);
  servings.setNumberFormat(G4P.INTEGER, 0);
  servings.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  servings.setOpaque(false);
  servings.addEventHandler(this, "servings_change");
  label1 = new GLabel(Recipe_Panel, 184, 24, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Recipes");
  label1.setLocalColorScheme(GCScheme.RED_SCHEME);
  label1.setOpaque(false);
  servings1 = new GLabel(Recipe_Panel, 86, 167, 123, 26);
  servings1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  servings1.setText("Number of Servings");
  servings1.setLocalColorScheme(GCScheme.RED_SCHEME);
  servings1.setOpaque(false);
  Recipe_Panel.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow Recipe_Panel;
GLabel title; 
GDropList Recipes; 
GDropList sorting1; 
GSlider servings; 
GLabel label1; 
GLabel servings1; 
