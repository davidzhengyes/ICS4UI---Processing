/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.
 
 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
 // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw2(PApplet appc, GWinData data) { //_CODE_:window2:787651:
  appc.background(230);
} //_CODE_:window2:787651:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:950850:
  Rubik.restart();
  Rubik.rightClockwise();
  Rubik.rightClockwise();
  Rubik.leftCounterClockwise();
  Rubik.leftCounterClockwise();
  Rubik.topClockwise();
  Rubik.topClockwise();
  Rubik.bottomCounterClockwise();
  Rubik.bottomCounterClockwise();
  Rubik.frontClockwise();
  Rubik.frontClockwise();
  Rubik.backCounterClockwise();
  Rubik.backCounterClockwise();
} //_CODE_:button1:950850:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:686018:
  Rubik.restart();
  Rubik.middleUpZ();
  Rubik.middleRightX();
  Rubik.middleDownZ();
  Rubik.middleLeftX();
} //_CODE_:button2:686018:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:504716:
  Rubik.restart();
  Rubik.frontClockwise();
  Rubik.backClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
  Rubik.frontClockwise();
  Rubik.backClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
  Rubik.frontClockwise();
  Rubik.backClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
} //_CODE_:button3:504716:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:290981:
  Rubik.restart();
  Rubik.frontClockwise();
  Rubik.backClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
  Rubik.frontClockwise();
  Rubik.backClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
  Rubik.topClockwise();
  Rubik.bottomClockwise();
  Rubik.rightClockwise();
  Rubik.leftClockwise();
} //_CODE_:button4:290981:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:907690:
  Rubik.restart();
  Rubik.middleUpZ();
  Rubik.middleUpZ();
  Rubik.backClockwise();
  Rubik.backClockwise();
  Rubik.middleUpZ();
  Rubik.middleUpZ();
  Rubik.backClockwise();
  Rubik.backClockwise();
  Rubik.middleRightY();
  Rubik.middleRightY();
  Rubik.bottomClockwise();
  Rubik.bottomClockwise();
  Rubik.middleRightY();
  Rubik.middleRightY();
  Rubik.bottomClockwise();
  Rubik.bottomClockwise();
  Rubik.middleRightX();
  Rubik.middleRightX();
  Rubik.rightClockwise();
  Rubik.rightClockwise();
  Rubik.middleRightX();
  Rubik.middleRightX();
  Rubik.rightClockwise();
  Rubik.rightClockwise();
} //_CODE_:button5:907690:

public void button6_click1(GButton source, GEvent event) { //_CODE_:button6:812462:
  Rubik.restart();
  Rubik.leftClockwise();
  Rubik.topClockwise();
  Rubik.backCounterClockwise();
  Rubik.topCounterClockwise();
  Rubik.rightClockwise();
  Rubik.leftCounterClockwise();
  Rubik.backClockwise();
  Rubik.rightCounterClockwise();
  Rubik.frontClockwise();
  Rubik.backCounterClockwise();
  Rubik.bottomClockwise();
  Rubik.rightClockwise();
  Rubik.bottomCounterClockwise();
  Rubik.frontCounterClockwise();
} //_CODE_:button6:812462:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI() {
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window2 = GWindow.getWindow(this, "Window title", 0, 0, 240, 120, JAVA2D);
  window2.noLoop();
  window2.setActionOnClose(G4P.KEEP_OPEN);
  window2.addDrawHandler(this, "win_draw2");
  button1 = new GButton(window2, 0, 1, 80, 30);
  button1.setText("Pattern 1");
  button1.setLocalColorScheme(GCScheme.RED_SCHEME);
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window2, 82, 31, 80, 30);
  button2.setText("Pattern 2");
  button2.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  button2.addEventHandler(this, "button2_click1");
  button3 = new GButton(window2, 162, 0, 80, 30);
  button3.setText("Pattern 3");
  button3.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  button3.addEventHandler(this, "button3_click1");
  button4 = new GButton(window2, -1, 90, 80, 30);
  button4.setText("Pattern 4");
  button4.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button4.addEventHandler(this, "button4_click1");
  button5 = new GButton(window2, 80, 64, 80, 30);
  button5.setText("Pattern 5");
  button5.addEventHandler(this, "button5_click1");
  button6 = new GButton(window2, 161, 88, 80, 30);
  button6.setText("Pattern 6");
  button6.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  button6.addEventHandler(this, "button6_click1");
  window2.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window2;
GButton button1; 
GButton button2; 
GButton button3; 
GButton button4; 
GButton button5; 
GButton button6; 
